{
  "env": {
      "es6": true,
      "browser": true
  },
  "extends": [
      "prettier/@typescript-eslint",
      "plugin:prettier/recommended",
      "plugin:react/recommended",
      "plugin:@typescript-eslint/recommended",
      "airbnb",
      "eslint:recommended", "plugin:react/recommended"
  ],
  "globals": {
      "__DEV__": "readonly",
      "Atomics": "readonly",
      "SharedArrayBuffer": "readonly"
  },
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
      "ecmaFeatures": {
          "jsx": true,
          "tsx": true
      },
      "ecmaVersion": 2018,
      "sourceType": "module"
  },
  "plugins": [
      "prettier",
      "react-hooks",
      "react",
      "@typescript-eslint"
  ],
  "rules": {

      "prettier/prettier": ["error", {"singleQuote": true, "parser": "flow"}],
      "no-unused-expressions": "off",
      "react/jsx-one-expression-per-line": "off",
      "react/jsx-props-no-spreading": "off",
      "@typescript-eslint/no-explicit-any": "off",
      "consistent-return": "off",
      "no-return-assign":"off",
      "react/prop-types": "off",
      "react-hooks/rules-of-hooks": "error",
      "react-hooks/exhaustive-deps": "warn",
      "no-anused-expressions": "off",
      "react/jsx-filename-extension": [1, { "extensions": [".tsx"] }],
      "import/prefer-default-export": "off",
        "@typescript-eslint/explicit-function-return-type": [
        "off",
        {
          "allowExpressions": true
        }
      ],
      "@typescript-eslint/no-unused-vars": ["error", {
        "argsIgnorePattern": "_"
      }],
      "class-methods-use-this": "off",
      "no-useless-constructor": "off",
      "camelcase": "off",
      "@typescript-eslint/camelcase": "off",
      "import/extensions": [
          "error",
          "ignorePackages",
          {
            "ts": "never",
            "tsx": "never"
          }
        ],
      "no-use-before-define": "off",
      "import/no-unresolved": [
        2,
        { "caseSensitive": false }
     ]
  },
  "settings": {
    "import/resolver": {
      "typescript": {}
      }
    }
  }

